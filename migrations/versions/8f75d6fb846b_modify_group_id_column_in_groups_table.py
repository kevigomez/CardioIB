"""Modify group_id column in groups table

Revision ID: 8f75d6fb846b
Revises: 
Create Date: 2024-06-25 14:37:37.270131

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '8f75d6fb846b'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('groups', schema=None) as batch_op:
        batch_op.alter_column('group_id',
               existing_type=mysql.SMALLINT(display_width=5, unsigned=True),
               type_=sa.Integer(),
               existing_nullable=False,
               autoincrement=True)
        batch_op.alter_column('name',
               existing_type=mysql.VARCHAR(length=85),
               nullable=True)
        batch_op.alter_column('admin_group_id',
               existing_type=mysql.SMALLINT(display_width=5, unsigned=True),
               type_=sa.String(length=85),
               existing_nullable=True)
        batch_op.alter_column('legacyid',
               existing_type=mysql.CHAR(length=16),
               type_=sa.String(length=16),
               existing_nullable=True)
        batch_op.alter_column('isdefault',
               existing_type=mysql.TINYINT(display_width=3, unsigned=True),
               type_=sa.String(length=16),
               nullable=True,
               existing_server_default=sa.text('0'))
        op.drop_constraint('groups_ibfk_1', 'groups', type_='foreignkey') 
        op.alter_column('groups', 'group_id',
           existing_type=sa.SMALLINT(display_width=5, unsigned=True),
           type_=sa.Integer,
           nullable=False,
           autoincrement=True)   

    with op.batch_alter_table('pacientes', schema=None) as batch_op:
        batch_op.alter_column('phone',
               existing_type=mysql.VARCHAR(length=50),
               type_=sa.BigInteger(),
               existing_nullable=False)
        batch_op.alter_column('created_at',
               existing_type=mysql.TIMESTAMP(),
               type_=sa.DateTime(),
               nullable=True,
               existing_server_default=sa.text('current_timestamp()'))

    with op.batch_alter_table('user_groups', schema=None) as batch_op:
        batch_op.alter_column('user_id',
               existing_type=mysql.MEDIUMINT(display_width=8, unsigned=True),
               type_=sa.Integer(),
               existing_nullable=False,
               autoincrement=True)
        batch_op.alter_column('group_id',
               existing_type=mysql.SMALLINT(display_width=5, unsigned=True),
               type_=sa.Integer(),
               nullable=True)

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.alter_column('user_id',
               existing_type=mysql.MEDIUMINT(display_width=8, unsigned=True),
               type_=sa.Integer(),
               existing_nullable=False,
               autoincrement=True)
        batch_op.alter_column('homepageid',
               existing_type=mysql.TINYINT(display_width=3, unsigned=True),
               type_=sa.Integer(),
               nullable=True,
               existing_server_default=sa.text('1'))
        batch_op.alter_column('date_created',
               existing_type=mysql.DATETIME(),
               nullable=True)
        batch_op.alter_column('last_modified',
               existing_type=mysql.TIMESTAMP(),
               type_=sa.DateTime(),
               nullable=True,
               existing_server_default=sa.text('current_timestamp() ON UPDATE current_timestamp()'))
        batch_op.alter_column('status_id',
               existing_type=mysql.TINYINT(display_width=3, unsigned=True),
               type_=sa.Integer(),
               existing_nullable=False)
        batch_op.alter_column('legacyid',
               existing_type=mysql.CHAR(length=16),
               type_=sa.String(length=16),
               existing_nullable=True)
        batch_op.alter_column('allow_calendar_subscription',
               existing_type=mysql.TINYINT(display_width=1),
               nullable=True,
               existing_server_default=sa.text('0'))
        batch_op.alter_column('default_schedule_id',
               existing_type=mysql.SMALLINT(display_width=5, unsigned=True),
               type_=sa.Integer(),
               existing_nullable=True)
        batch_op.alter_column('document_type',
               existing_type=mysql.VARCHAR(length=255),
               type_=sa.String(length=50),
               existing_nullable=True,
               existing_server_default=sa.text("'CC'"))
        batch_op.drop_index('organization')
        batch_op.drop_index('public_id')
        op.create_foreign_key('groups_ibfk_1', 'groups', 'another_table', ['admin_group_id'], ['group_id'])

    # ### end Alembic commands ###


def downgrade():
    op.drop_constraint('groups_ibfk_1', 'groups', type_='foreignkey')
    op.alter_column('groups', 'group_id',
           existing_type=sa.Integer,
           type_=sa.SMALLINT(display_width=5, unsigned=True),
           nullable=False,
           autoincrement=True)
    op.create_foreign_key('groups_ibfk_1', 'groups', 'another_table', ['admin_group_id'], ['group_id'])
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_index('public_id', ['public_id'], unique=True)
        batch_op.create_index('organization', ['organization'], unique=True)
        batch_op.alter_column('document_type',
               existing_type=sa.String(length=50),
               type_=mysql.VARCHAR(length=255),
               existing_nullable=True,
               existing_server_default=sa.text("'CC'"))
        batch_op.alter_column('default_schedule_id',
               existing_type=sa.Integer(),
               type_=mysql.SMALLINT(display_width=5, unsigned=True),
               existing_nullable=True)
        batch_op.alter_column('allow_calendar_subscription',
               existing_type=mysql.TINYINT(display_width=1),
               nullable=False,
               existing_server_default=sa.text('0'))
        batch_op.alter_column('legacyid',
               existing_type=sa.String(length=16),
               type_=mysql.CHAR(length=16),
               existing_nullable=True)
        batch_op.alter_column('status_id',
               existing_type=sa.Integer(),
               type_=mysql.TINYINT(display_width=3, unsigned=True),
               existing_nullable=False)
        batch_op.alter_column('last_modified',
               existing_type=sa.DateTime(),
               type_=mysql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('current_timestamp() ON UPDATE current_timestamp()'))
        batch_op.alter_column('date_created',
               existing_type=mysql.DATETIME(),
               nullable=False)
        batch_op.alter_column('homepageid',
               existing_type=sa.Integer(),
               type_=mysql.TINYINT(display_width=3, unsigned=True),
               nullable=False,
               existing_server_default=sa.text('1'))
        batch_op.alter_column('user_id',
               existing_type=sa.Integer(),
               type_=mysql.MEDIUMINT(display_width=8, unsigned=True),
               existing_nullable=False,
               autoincrement=True)

    with op.batch_alter_table('user_groups', schema=None) as batch_op:
        batch_op.alter_column('group_id',
               existing_type=sa.Integer(),
               type_=mysql.SMALLINT(display_width=5, unsigned=True),
               nullable=False)
        batch_op.alter_column('user_id',
               existing_type=sa.Integer(),
               type_=mysql.MEDIUMINT(display_width=8, unsigned=True),
               existing_nullable=False,
               autoincrement=True)

    with op.batch_alter_table('pacientes', schema=None) as batch_op:
        batch_op.alter_column('created_at',
               existing_type=sa.DateTime(),
               type_=mysql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('current_timestamp()'))
        batch_op.alter_column('phone',
               existing_type=sa.BigInteger(),
               type_=mysql.VARCHAR(length=50),
               existing_nullable=False)

    with op.batch_alter_table('groups', schema=None) as batch_op:
        batch_op.create_foreign_key('groups_ibfk_1', 'groups', ['admin_group_id'], ['group_id'])
        batch_op.alter_column('isdefault',
               existing_type=sa.String(length=16),
               type_=mysql.TINYINT(display_width=3, unsigned=True),
               nullable=False,
               existing_server_default=sa.text('0'))
        batch_op.alter_column('legacyid',
               existing_type=sa.String(length=16),
               type_=mysql.CHAR(length=16),
               existing_nullable=True)
        batch_op.alter_column('admin_group_id',
               existing_type=sa.String(length=85),
               type_=mysql.SMALLINT(display_width=5, unsigned=True),
               existing_nullable=True)
        batch_op.alter_column('name',
               existing_type=mysql.VARCHAR(length=85),
               nullable=False)
        batch_op.alter_column('group_id',
               existing_type=sa.Integer(),
               type_=mysql.SMALLINT(display_width=5, unsigned=True),
               existing_nullable=False,
               autoincrement=True)

    # ### end Alembic commands ###
